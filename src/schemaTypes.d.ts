/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Verification key, hex encoded
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "vkey".
 */
export type Vkey = string;
/**
 * Verification key hash, hex encoded
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "vkh".
 */
export type Vkh = string;
/**
 * Script hash, hex encoded
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "scriptHash".
 */
export type ScriptHash = string;
/**
 * Unit in the sense of the concat of the script hash and asset name, hex encoded
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "unit".
 */
export type Unit = string;
/**
 * Keytag, hex encoded
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "keytag".
 */
export type Keytag = string;
/**
 * Provider key, hex encoded
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "provider".
 */
export type Provider = string;
/**
 * IOU verification key, hex encoded
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "iouKey".
 */
export type IouKey = string;
/**
 * Signature, hex encoded
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "signature".
 */
export type Signature = string;
/**
 * Subbit tag, hex encoded
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "tag".
 */
export type Tag = string;
/**
 * Tx id, hex encoded
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "txId".
 */
export type TxId = string;
/**
 * outputIdx, int as string
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "outputIdx".
 */
export type OutputIdx = string;
/**
 * Account credential, bytes in base64
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "credential".
 */
export type Credential = string;
/**
 * An amount, positive or negative, in digits
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "amount".
 */
export type Amount = string;
/**
 * A positive integer, in digits
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "posInt".
 */
export type PosInt = string;
/**
 * Currency is Ada
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "ada".
 */
export type Ada = string;
/**
 * Either ada, by hash, or by class
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "currency".
 */
export type Currency = Ada | ByHash | ByClass;
/**
 * An edit is one of: suspend, unsuspend, mod
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "edit".
 *
 * This interface was referenced by `EditBody`'s JSON-Schema definition
 * via the `patternProperty` "^([0-9a-fA-f]{2}){32,}$^".
 */
export type Edit = SuspendUnsuspend | EditMod;
/**
 * Array of keytags
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "keytags".
 */
export type Keytags = Keytag[];
/**
 * tot response. amount as string
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "totRes".
 */
export type TotRes = string;
/**
 * Sync body content
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "syncBody".
 */
export type SyncBody = L1Subbit[];
/**
 * Drop body content
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "dropBody".
 */
export type DropBody = DropKeytags | DropTime | DropEvents;

/**
 * A simple account manager
 */
export interface SubbitMan {
  [k: string]: unknown;
}
/**
 * Currency by hash, script hash hex encoded
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "byHash".
 */
export interface ByHash {
  byHash: ScriptHash;
}
/**
 * Currency by class, unit is hex encoded
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "byClass".
 */
export interface ByClass {
  byClass: Unit;
}
/**
 * Suspend or unsuspend
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "suspendUnsuspend".
 */
export interface SuspendUnsuspend {
  kind: string;
}
/**
 * Description of time. Currently support only 'olderThan'
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "time".
 */
export interface Time {
  olderThan: PosInt;
}
/**
 * Mod via an edit
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "editMod".
 */
export interface EditMod {
  kind: string;
  by: Amount;
}
/**
 * Drop by keytags
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "dropKeytags".
 */
export interface DropKeytags {
  kind: string;
  value: Keytags;
}
/**
 * Drop by time
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "dropTime".
 */
export interface DropTime {
  kind: string;
  value: Time;
}
/**
 * Drop events by time constraint
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "dropEvents".
 */
export interface DropEvents {
  kind: string;
  value: Time;
}
/**
 * L1 subbit content
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "l1Subbit".
 */
export interface L1Subbit {
  txId: TxId;
  outputIdx: OutputIdx;
  provider: Provider;
  currency: Currency;
  closePeriod: PosInt;
  iouKey: IouKey;
  tag: Tag;
  sub: Amount;
  subbitAmt: Amount;
}
/**
 * tot query string
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "totQuery".
 */
export interface TotQuery {
  cred: Credential;
}
/**
 * info response
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "infoRes".
 */
export interface InfoRes {
  cost: Amount;
  iouAmt: Amount;
  sub: Amount;
  subbitAmt: Amount;
  sig: Signature;
}
/**
 * mod query string
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "modQuery".
 */
export interface ModQuery {
  cred: Credential;
  /**
   * An amount, positive or negative, in digits
   */
  by: string;
}
/**
 * Edit body content
 *
 * This interface was referenced by `SubbitMan`'s JSON-Schema
 * via the `definition` "editBody".
 */
export interface EditBody {
  [k: string]: Edit;
}
